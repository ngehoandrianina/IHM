# Generated by Django 5.2 on 2025-04-26 14:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('batiment', models.CharField(max_length=100)),
                ('etage', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Materiel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('marque', models.CharField(max_length=100)),
                ('modele', models.CharField(max_length=100)),
                ('numero_serie', models.CharField(max_length=100, unique=True)),
                ('etat', models.CharField(choices=[('Disponible', 'Disponible'), ('En pret', 'En prêt'), ('En panne', 'En panne'), ('Réparé', 'Réparé'), ('Hors service', 'Hors service')], default='Disponible', max_length=20)),
                ('date_acquisition', models.DateField()),
                ('departement', models.CharField(max_length=100)),
                ('salle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Materielle.salle')),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Administrateur', 'Administrateur'), ('Technicien', 'Technicien'), ('Enseignant', 'Enseignant'), ('Etudiant', 'Etudiant'), ('ResponsableDep', 'Responsable Département')], max_length=20)),
                ('departement', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='materielle_utilisateur_groups', related_query_name='materielle_utilisateur', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='materielle_utilisateur_permissions', related_query_name='materielle_utilisateur', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SignalementPanne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_signalement', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField()),
                ('etat', models.CharField(choices=[('Non traité', 'Non traité'), ('En cours', 'En cours'), ('Résolu', 'Résolu')], default='Non traité', max_length=20)),
                ('materiel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Materielle.materiel')),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Signalement de panne',
                'verbose_name_plural': 'Signalements de panne',
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_intervention', models.DateField()),
                ('description', models.TextField()),
                ('signalement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Materielle.signalementpanne')),
                ('technicien', models.ForeignKey(limit_choices_to={'role': 'Technicien'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Maintenance',
                'verbose_name_plural': 'Maintenances',
            },
        ),
        migrations.CreateModel(
            name='DemandePret',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('etat', models.CharField(choices=[('En attente', 'En attente'), ('Validé', 'Validé'), ('Refusé', 'Refusé'), ('Terminé', 'Terminé')], default='En attente', max_length=20)),
                ('materiel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Materielle.materiel')),
                ('demandeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Demande de prêt',
                'verbose_name_plural': 'Demandes de prêt',
            },
        ),
    ]
